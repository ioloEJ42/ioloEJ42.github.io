{
  "id": "all-sorts",
  "title": "All-Sorts",
  "description": "An advanced algorithm visualization platform showcasing 15+ sorting algorithms through real-time, interactive visualizations.",
  "date": "2024-08-15",
  "tags": ["React", "TypeScript", "Tailwind CSS", "Algorithms", "Interactive"],
  "github": "https://github.com/ioloEJ42/All-Sorts",
  "live": "https://all-sorts.netlify.app/",
  "content": "<h2>Project Overview</h2><p>All-Sorts is a modern, interactive sorting algorithm visualization platform that brings complex computer science concepts to life. The application allows users to visualize 15+ sorting algorithms in real-time, with customizable array sizes and sorting speeds, making it an excellent educational tool for understanding algorithm efficiency and behavior.</p><h2>Algorithm Categories</h2><h3>Logarithmic (O(n log n))</h3><ul><li>Quick Sort</li><li>Merge Sort</li><li>Heap Sort</li></ul><h3>Quadratic (O(nÂ²))</h3><ul><li>Bubble Sort</li><li>Selection Sort</li><li>Insertion Sort</li><li>Shell Sort</li><li>Comb Sort</li><li>Brick Sort</li><li>Cocktail Sort</li><li>Pancake Sort</li><li>Gnome Sort</li></ul><h3>Unique & Experimental</h3><ul><li>Bitonic Sort (requires power-of-2 arrays)</li><li>Bogo Sort</li><li>Radix Sort</li><li>Stooge Sort</li></ul><h2>Technical Features</h2><ul><li><strong>Real-time Visualization Engine:</strong> Watch algorithms work step-by-step with visual feedback</li><li><strong>Interactive Controls:</strong> Adjust array size (5-200 elements) and sorting speed</li><li><strong>Abort Control System:</strong> Stop sorting operations at any time</li><li><strong>Visual State Indicators:</strong> Color-coded elements showing comparison, sorting, and completion states</li><li><strong>Responsive Design:</strong> Works seamlessly across device sizes</li><li><strong>Smooth Transitions:</strong> Page transitions and UI animations enhance user experience</li></ul><h2>Technical Implementation</h2><p>The project is built with a modern web technology stack:</p><ul><li><strong>React 18 with TypeScript:</strong> For a robust, type-safe component architecture</li><li><strong>Tailwind CSS:</strong> Utility-first CSS framework for styling</li><li><strong>Framer Motion:</strong> For smooth animations and transitions</li><li><strong>React Router:</strong> For application navigation</li><li><strong>React Hot Toast:</strong> For user notifications</li><li><strong>Vite:</strong> For fast development and optimized builds</li></ul><h2>Architecture</h2><p>The application follows a modular architecture with clear separation of concerns:</p><ul><li><strong>Algorithms Module:</strong> Pure TypeScript implementations of sorting algorithms</li><li><strong>Visualization Engine:</strong> React components that render and animate the sorting process</li><li><strong>Control System:</strong> Interactive UI elements for controlling the visualization</li><li><strong>Type System:</strong> Comprehensive TypeScript definitions ensuring code reliability</li></ul><h2>Educational Value</h2><p>All-Sorts serves as both a practical tool and an educational resource:</p><ul><li>Visualizes algorithm behavior in real-time</li><li>Illustrates time complexity differences between algorithm categories</li><li>Provides algorithm descriptions and complexity information</li><li>Allows direct comparison between different sorting approaches</li></ul><p>This project demonstrates my ability to implement complex algorithms, create interactive visualizations, and build educational tools using modern web technologies. It also showcases my understanding of computer science fundamentals and UI/UX design principles.</p>"
}
