{
  "id": "file-integrity-monitor",
  "title": "File Integrity Monitor",
  "description": "A Python-based security tool for real-time file system monitoring with cryptographic verification and comprehensive reporting.",
  "date": "2024-10-15",
  "tags": ["Python", "Security", "Watchdog", "SQLite", "PDF Reporting"],
  "github": "https://github.com/ioloEJ42/File_Integrity_Monitor",
  "content": "<h2>Project Overview</h2><p>File Integrity Monitor (FIM) is a robust Python-based security tool that provides real-time monitoring and integrity verification of files within specified directories. The tool tracks file system events including creation, modification, deletion, and renaming, while maintaining detailed logs with user attribution and cryptographic hashes.</p><h2>Key Features</h2><ul><li><strong>Real-time Monitoring:</strong> Detects and records file system events as they happen</li><li><strong>Cryptographic Verification:</strong> Uses SHA-256 hashing to detect unauthorized content changes</li><li><strong>User Attribution:</strong> Tracks which user performed each file operation</li><li><strong>Cross-Platform Support:</strong> Works on Windows, Unix, and WSL with path normalization</li><li><strong>Database Integration:</strong> Maintains event history in SQLite database</li><li><strong>Advanced Reporting:</strong> Exports detailed logs in CSV and PDF formats with visualizations</li><li><strong>Interactive Interface:</strong> Color-coded terminal output for different event types</li></ul><h2>Technical Implementation</h2><p>The project uses several key technologies and libraries:</p><ul><li><strong>Watchdog:</strong> For efficient event-based file system monitoring</li><li><strong>SQLite:</strong> For persistent storage of file hashes and event logs</li><li><strong>Reportlab:</strong> For generating comprehensive PDF reports with analytics</li><li><strong>Rich:</strong> For enhanced terminal output and user experience</li></ul><h2>Security Considerations</h2><p>File integrity monitoring is a crucial aspect of cybersecurity, especially for systems that require high levels of compliance. This tool helps detect unauthorized changes to important files by:</p><ul><li>Creating a baseline of known-good hashes</li><li>Continuously monitoring for changes to files</li><li>Alerting when unexpected modifications occur</li><li>Providing forensic evidence of file system activities</li></ul><h2>Architecture</h2><p>The project is structured with separation of concerns in mind:</p><ul><li><strong>Core Monitoring:</strong> Main file handling event detection and processing</li><li><strong>Database Layer:</strong> Data persistence and retrieval</li><li><strong>Export Module:</strong> Reporting capabilities with visualizations</li><li><strong>Test Framework:</strong> Automated testing of monitoring capabilities</li></ul><p>This modular approach allows for easy extension of functionality and makes the codebase maintainable.</p>"
}
